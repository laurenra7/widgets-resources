name: Run native automated end-to-end tests

on:
    push:
        branches: [master]
        paths: "packages/pluggableWidgets/*-native/**/*"

    pull_request:
        branches: [master]
        paths: "packages/pluggableWidgets/*-native/**/*"

jobs:
    native_automated_tests:
        name: "Native automated tests"
        runs-on: ubuntu-latest
        permissions:
            packages: read
            contents: read
        strategy:
            # when one test fails, DO NOT cancel the other
            fail-fast: false
            # matrix:
            #     # run 3 copies of the current job in parallel
            #     containers: [0, 1, 2]

        steps:
            #     - name: "Checking changed files"
            #       id: files
            #       uses: softprops/diffset@v1
            #       if:
            #           github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name ==
            #           github.repository
            #       with:
            #           global_files: |
            #               !{packages/**/*,configs/e2e/*.json,detox/**/*,scripts/**/*}
            #           not_atlas_native_files: |
            #               !packages/theming/atlas/src/**/native/**
            #       env:
            #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: "Checking-out code"
              uses: actions/checkout@v2
              with:
                  submodules: false
            - name: "Fetching master to compare"
              if:
                  github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name !=
                  github.repository
              run:
                  git fetch --no-tags --prune --depth=1 origin +refs/heads/${{ github.base_ref
                  }}:refs/remotes/origin/${{ github.base_ref }}
            # - name: "Defining environment variables"
            #   id: variables
            #   run:
            #       echo ::set-output name=arg::$(if [ "${{ steps.files.outputs.global_files }}" = "" ] && ${{
            #       github.event_name == 'pull_request' }}; then echo '--since origin/${{ github.base_ref }}'; else echo
            #       ''; fi)
            - name: "Defining cache"
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            - name: "Installing dependencies"
              run: npm install && npm run postinstall
            - name: Login to GitHub Container Registry
              if:
                  github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name ==
                  github.repository
              uses: docker/login-action@v1
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: "Start Mendix Environment"
              run: npm run start:native-project
            - name: "Executing E2E tests"
              if:
                  github.event_name == 'push' || (github.event_name == 'pull_request' &&
                  github.event.pull_request.head.repo.full_name != github.repository)
              run: npm run test:e2e -- --since origin/${{ github.base_ref }}
              # env:
              #     FORKED:
              #         github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name ==
              #         github.repository
            # - name: "Fixing files permissions"
            #   if: failure()
            #   run: |
            #       sudo find ${{ github.workspace }}/packages/* -type d -exec chmod 755 {} \;
            #       sudo find ${{ github.workspace }}/packages/* -type f -exec chmod 644 {} \;
            - name: "Archive test screenshot diff results"
              uses: actions/upload-artifact@v2
              if: failure()
              with:
                  name: test-screenshot-results
                  path: |
                      ${{ github.workspace }}/packages/**/tests/e2e/screenshot-results/diff/**/*.png
                      ${{ github.workspace }}/packages/**/tests/e2e/screenshot-results/TESTFAIL_*.png
                  if-no-files-found: error
